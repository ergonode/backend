<?xml version="1.0" encoding="UTF-8"?>
<project name="Ergonode" basedir="." default="build">
    <autoloader autoloaderpath="${project.basedir}/vendor/autoload.php"/>

    <property name="dir.src" value="${project.basedir}/src"/>
    <property name="dir.module" value="${project.basedir}/module"/>
    <property name="dir.build" value="${project.basedir}/build"/>
    <property name="dir.docs" value="${dir.build}/docs"/>
    <property name="dir.reports" value="${dir.build}/reports"/>
    <property name="dir.console" value="bin/console"/>
    <property name="APP_ENV" value="dev" />


    <!-- Build -->
    <target name="build" depends="cache:clear, create:directory, database:migrate" description="Standard build plan."/>
    <target name="rebuild" depends="cache:clear, create:directory, database:drop, database:create, database:migrate, cache:clear, database:fixture" description="Standard build plan with database recreation."/>
    <target name="rebuild:dev" depends="cache:clear, create:directory, database:drop, database:create, database:migrate, cache:clear, database:fixture:dev" description="Standard build plan with database recreation."/>

    <!-- Create directories -->
    <target name="create:directory" description="Create build directories.">
        <echo msg="Creating build directories ..."/>
        <mkdir dir="${dir.build}"/>
        <mkdir dir="${dir.docs}"/>
        <mkdir dir="${dir.reports}"/>
        <mkdir dir="${dir.reports}/pmd"/>
        <mkdir dir="${dir.reports}/coverage"/>
    </target>

    <!-- Tests -->
    <target
            name="test"
            depends="test:unit, test:behat"
            description="Execute tests with database recreation."
    >
    </target>

    <!-- PHP Unit -->
    <target name="test:unit" description="Executes unit tests.">
        <echo msg="Running unit tests..."/>
        <exec command="bin/phpunit -c phpunit.xml.dist"
              checkreturn="true"
              logoutput="true"
              passthru="true"
        >
        </exec>
    </target>

    <!-- PHP Unit coverage report-->
    <target name="test:unit:coverage" description="Executes unit tests.">
        <echo msg="Running unit tests..."/>
        <exec command="bin/phpunit -c phpunit.xml.dist"
              checkreturn="true"
              logoutput="true"
              passthru="true"
        >
        </exec>
    </target>

    <!-- Behat -->
    <target name="test:behat" depends="override:property:APP_ENV, database:drop, database:create, database:migrate, cache:clear, database:fixture" description="Executes behat tests." >
        <echo msg="Running behat tests..."/>
        <exec command="APP_ENV=${APP_ENV} APP_URL=http://localhost:8001 php -d error_reporting='E_ALL &amp; ~E_DEPRECATED' bin/behat --colors --stop-on-failure"
              checkreturn="true"
              logoutput="true"
              passthru="true"
        >
        </exec>
    </target>

    <!-- Cache -->
    <target name="cache:clear" description="Clear cache">
        <echo msg="Start clearing cache"/>
        <exec command="APP_ENV=${APP_ENV} ${dir.console} cache:clear " logoutput="true" checkreturn="true" />
    </target>

    <!-- Database -->
    <target name="database:rebuild" depends="database:drop, database:create, database:migrate, cache:clear" description="Database rebuild"/>

    <target name="database:migrate" description="Migrate migrations">
        <echo msg="Executing database migrations..."/>
        <exec command="APP_ENV=${APP_ENV} ${dir.console} ergonode:migrations:migrate --no-interaction --allow-no-migration" logoutput="true" checkreturn="true" />
    </target>

    <target name="database:create" description="Create database">
        <echo msg="Create database..."/>
        <exec command="APP_ENV=${APP_ENV} ${dir.console} doctrine:database:create --no-interaction" logoutput="true" checkreturn="true" />
    </target>

    <target name="database:drop" description="Drop database">
        <echo msg="Drop database..."/>
        <exec command="APP_ENV=${APP_ENV} ${dir.console} doctrine:database:drop --if-exists --no-interaction --force" logoutput="true" checkreturn="true" />
    </target>

    <target name="database:fixture" description="Fill database with basic data">
        <echo msg="Fill database with fixtures ..."/>
        <exec command="APP_ENV=${APP_ENV} ${dir.console} ergonode:fixture:load --no-interaction"
              checkreturn="true"
              logoutput="true">
        </exec>
    </target>

    <target name="database:fixture:dev" description="Fill database with development data">
        <echo msg="Fill database with dev fixtures ..."/>
        <exec command="APP_ENV=${APP_ENV} ${dir.console} ergonode:fixture:load -g develop --no-interaction"
              checkreturn="true"
              logoutput="true">
        </exec>
    </target>

    <!-- Code style check -->
    <target name="check:style" depends="check:cs, check:phpstan" description="Check code style"/>

    <!-- Mess detector -->
    <target name="check:md" description="Check PHP Mess Detector">
        <phpmd>
            <fileset dir="${dir.src}">
                <include name="**/*.php" />
            </fileset>
            <fileset dir="${dir.module}">
                <include name="**/*.php"/>
            </fileset>
<!--            <formatter type="xml" outfile="${dir.reports}/pmd.xml"/>-->
        </phpmd>
    </target>

    <!-- Copy paste detector -->
    <target name="check:cpd" description="Copy Paste Detector.">
        <phpcpd>
            <fileset dir="${dir.src}">
                <include name="**/*.php"/>
            </fileset>
            <fileset dir="${dir.module}">
                <include name="**/*.php"/>
            </fileset>
<!--            <formatter type="pmd" outfile="${dir.reports}/pmd-cpd.xml"/>-->
        </phpcpd>
    </target>

    <!-- PHP Stan check -->
    <target name="check:phpstan" description="Executes unit tests.">
        <echo msg="phpstan analyse level 1 ..."/>
        <exec command="bin/phpstan analyse module --level 1"
              checkreturn="true"
              logoutput="true">
        </exec>
    </target>

    <!-- PHP code style check -->
    <target name="check:cs" description="PHPCS checker">
        <exec command="bin/phpcs -n"
              checkreturn="true"
              logoutput="true">
        </exec>
    </target>

    <!-- PHP code style check -->
    <target name="check:cs:warning" description="PHPCS checker - warnings">
        <exec command="bin/phpcs -p"
              checkreturn="true"
              logoutput="true">
        </exec>
    </target>

    <!-- PHP code fix code style -->
    <target name="check:cbf" description="PHPCBF fixer">
        <exec command="bin/phpcbf"
              checkreturn="true"
              logoutput="true">
        </exec>
    </target>

    <target name="check:dependencies:report-png" description="Deptrac dump to png image">
        <exec command="./bin/deptrac analyze --formatter-graphviz=1 --formatter-graphviz-dump-image=${dir.reports}/deptrac.png"
              checkreturn="true"
              logoutput="true">
        </exec>
    </target>
    <target name="check:dependencies:report-dot" description="Deptrac dump to dot file">
        <exec command="./bin/deptrac analyze --formatter-graphviz=1  --formatter-graphviz-dump-dot=${dir.reports}/deptrac.dot"
              checkreturn="false"
              logoutput="true">
        </exec>
    </target>
    <target name="check:dependencies:report-svg"  depends="check:dependencies:report-dot"  description="Deptrac dump to svg image">
        <exec command="dot '${dir.reports}/deptrac.dot' -Tsvg  -o ${dir.reports}/deptrac.svg"
              checkreturn="true"
              logoutput="true">
        </exec>
    </target>
    <target name="check:dependencies" description="Deptrac check dependencies">
        <exec command="./bin/deptrac"
              checkreturn="true"
              logoutput="true">
        </exec>
    </target>

    <target name="override:property:APP_ENV" description="Overrides APP_ENV property with test value">
        <property name="APP_ENV" value="test" override="true" />
    </target>
</project>
