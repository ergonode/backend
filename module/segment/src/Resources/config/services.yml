services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false

    Ergonode\Segment\Application\:
        resource: '../../Application/*'

    Ergonode\Segment\Application\Controller\Api\:
        resource: '../../Application/Controller/Api/*'
        tags: ['controller.service_arguments']

    Ergonode\Segment\Application\Controller\Api\SegmentGridReadAction:
        tags: ['controller.service_arguments']
        arguments:
            $gridBuilder: '@Ergonode\Segment\Infrastructure\Grid\SegmentGridBuilder'

    Ergonode\Segment\Application\Controller\Api\SegmentProductsGridReadAction:
        tags: ['controller.service_arguments']
        arguments:
            $gridBuilder: '@Ergonode\Segment\Infrastructure\Grid\SegmentProductsGridBuilder'

    Ergonode\Segment\Domain\:
        resource: '../../Domain/*'
        exclude: '../../Domain/{Entity,ValueObject,Type,Condition}'

    Ergonode\Segment\Infrastructure\:
        resource: '../../Infrastructure/*'
        exclude: '../../Infrastructure/{Specification}'

    Ergonode\Segment\Infrastructure\Handler\:
        resource: '../../Infrastructure/Handler/*'
        tags: ['messenger.message_handler']

    Ergonode\Segment\Infrastructure\Persistence\Projector\:
        resource: '../../Infrastructure/Persistence/Projector/*'
        tags: ['ergonode.event_sourcing.projector']

    Ergonode\Segment\Domain\Repository\SegmentRepositoryInterface: '@Ergonode\Segment\Infrastructure\Persistence\Repository\EventStoreSegmentRepository'
    Ergonode\Segment\Domain\Query\SegmentQueryInterface: '@Ergonode\Segment\Infrastructure\Persistence\Query\DbalSegmentQuery'
