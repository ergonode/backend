services:
    _defaults:
        autowire: true
        autoconfigure: true
        public: false
    _instanceof:
        Ergonode\Condition\Domain\Service\ConfigurationStrategyInterface:
            tags: ['component.condition.condition_set.configurator_interface']

    Ergonode\Condition\Application\:
        resource: '../../Application/*'

    Ergonode\Condition\Persistence\:
        resource: '../../Persistence/*'

    Ergonode\Condition\Domain\:
        resource: '../../Domain/*'
        exclude: '../../Domain/{Entity,ValueObject,Type,Condition}'

    Ergonode\Condition\Infrastructure\:
        resource: '../../Infrastructure/*'
        exclude: '../../Infrastructure/{Specification}'

    Ergonode\Condition\Infrastructure\Handler\:
        resource: '../../Infrastructure/Handler/*'
        exclude: '../../Infrastructure/Handler/{Strategy}'
        tags: ['messenger.message_handler']

    Ergonode\Condition\Infrastructure\JMS\Serializer\Handler\:
        resource: '../../Infrastructure/JMS/Serializer/Handler/*'
        tags: ['jms_serializer.subscribing_handler']

    Ergonode\Condition\Infrastructure\Resolver\ConditionConstraintResolver:
        calls:
            - ['set', ['ATTRIBUTE_EXISTS_CONDITION', 'Ergonode\Condition\Application\Validator\ConstraintAttributeExistsCondition']]

    Ergonode\Condition\Domain\Query\ConditionSetQueryInterface: '@Ergonode\Condition\Persistence\Dbal\Query\DbalConditionSetQuery'
    Ergonode\Condition\Domain\Repository\ConditionSetRepositoryInterface: '@Ergonode\Condition\Persistence\Dbal\Repository\DbalConditionSetRepository'
