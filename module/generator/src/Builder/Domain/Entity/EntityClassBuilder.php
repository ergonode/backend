<?php

/**
 * Copyright Â© Bold Brand Commerce Sp. z o.o. All rights reserved.
 * See LICENSE.txt for license details.
 */

declare(strict_types = 1);

namespace Ergonode\Generator\Builder\Domain\Entity;

use Ergonode\Core\Domain\Entity\AbstractId;
use Ergonode\EventSourcing\Domain\AbstractAggregateRoot;
use Ergonode\Generator\Builder\BuilderInterface;
use Ergonode\Generator\Builder\FileBuilder;
use Nette\PhpGenerator\PhpFile;

/**
 */
class EntityClassBuilder implements BuilderInterface
{
    /**
     * @var FileBuilder
     */
    private $builder;

    /**
     * @param FileBuilder $builder
     */
    public function __construct(FileBuilder $builder)
    {
        $this->builder = $builder;
    }

    /**
     * @param string $module
     * @param string $entity
     *
     * @return PhpFile
     */
    public function build(string $module, string $entity): PhpFile
    {
        $file = $this->builder->build();
        $className = $entity;

        $namespace = sprintf('Ergonode\%s\Domain\Entity', ucfirst($module));

        $phpNamespace = $file->addNamespace($namespace);
        $phpNamespace->addUse(AbstractAggregateRoot::class);
        $phpNamespace->addUse(AbstractId::class);
        $phpNamespace->addUse('\JMS\Serializer\Annotation', 'JMS');

        $phpClass = $phpNamespace->addClass($className);
        $phpClass->addExtend(AbstractAggregateRoot::class);
        $phpClass->addComment('Autogenerated class');
        $phpClass->addProperty('id')
            ->addComment(sprintf('@var %sId', $className))
            ->addComment(' ')
            ->addComment(sprintf('@JMS\Type("%s\%sId")', $namespace, $className));

        $phpClass->addMethod('getId')
            ->setReturnType(AbstractId::class)
            ->addComment(' ')
            ->addComment(sprintf('@return %sId', $className))
            ->addBody('return $this->id;');

        return $file;
    }
}
